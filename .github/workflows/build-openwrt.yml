#=================================================
# Lisence: MIT
# Author: @P3TERXÔºå@Meloncn
# OpenWrt Starting Âõ∫‰ª∂ÁºñËØëËá™Âä®ÂåñÁ®ãÂ∫è
#=================================================

name: Build OpenWrt

on:
  repository_dispatch:
  release:
    types: published
  push:
    branches:
      - master
    paths:
      - 'build.config'
#  schedule:
#    - cron: 0 8 * * 5
  watch:
    types: started

env:
  REPO_URL: https://github.com/coolsnowwolf/lede
  REPO_BRANCH: master
  FEEDS_CONF: feeds.conf
  CONFIG_FILE: build.config
  DIY_P1_SH: custom1.sh
  DIY_P2_SH: custom2.sh
  SSH_ACTIONS: true
  UPLOAD_BIN_DIR: false
  UPLOAD_BIN_COWTRANSFER: false
  UPLOAD_FIRMWARE: true
  UPLOAD_COWTRANSFER: true
  UPLOAD_RELEASE: false
  DEBUG_MODEL: true
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: ubuntu-latest
    if: github.event.repository.owner.id == github.event.sender.id

    steps:
    - name: Ê£ÄÂá∫È°πÁõÆÂàÜÊîØ
      uses: actions/checkout@master

    - name: ÂàùÂßãÂåñÁºñËØëÁéØÂ¢É
      env:
        DEBIAN_FRONTEND: noninteractive
      if: env.DEBUG_MODEL == 'false' && !cancelled()
      run: |
        echo "ÂáÜÂ§áÊ∏ÖÁêÜÁºñËØëÁéØÂ¢É"
        sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc /etc/mysql /etc/php
        echo "ÁºñËØëÁéØÂ¢ÉÊ∏ÖÁêÜÂÆåÊàê"
        echo "ÁºñËØëÁéØÂ¢ÉÂºÄÂßãÂçáÁ∫ß"
        sudo -E apt-get -yqq update
        echo "ÁºñËØëÁéØÂ¢ÉÂçáÁ∫ßÂÆåÊàê"
        echo "ÂºÄÂßãÂÆâË£Ö‰æùËµñËΩØ‰ª∂"
        sudo -E apt-get -yqq install $(curl -fsSL git.io/depends-ubuntu-1804)
        sudo -E apt-get -yqq autoremove --purge
        sudo -E apt-get -yqq clean
        
    - name: ÂàõÂª∫Â∑•‰ΩúÁõÆÂΩï
      run: |
        sudo timedatectl set-timezone "$TZ"
        echo "Êó∂Âå∫ËÆæÁΩÆÂÆåÊàêÔºö$TZ"
        sudo mkdir -p /workdir
        echo "Â∑•‰ΩúÁõÆÂΩïÂàõÂª∫ÂÆåÊàê"
        sudo chown $USER:$GROUPS /workdir

    - name: ÊúçÂä°Âô®ÂèØÁî®Â≠òÂÇ®ËµÑÊ∫ê
      if: (!cancelled())
      run: |
          echo "======================="
          echo "Space usage:"
          echo "======================="
          df -hT $PWD
          echo "======================="
          df -h
          echo "======================="
          du -h ./ --max-depth=1
          du -h /mnt/openwrt/ --max-depth=1 || true

    - name: ÂÖãÈöÜÁõÆÊ†á‰ªìÂ∫ìÊ∫ê‰ª£Á†Å
      working-directory: /workdir
      run: |
        git clone --depth 1 $REPO_URL -b $REPO_BRANCH openwrt
        ln -sf /workdir/openwrt $GITHUB_WORKSPACE/openwrt
   
    - name: ÂØºÂÖ•Ëá™ÂÆö‰πâFeedsÊñá‰ª∂
      run: |
        [ -e $FEEDS_CONF ] && mv $FEEDS_CONF openwrt/feeds.conf.default
  
    - name: ÊâßË°åËá™ÂÆö‰πâËÑöÊú¨1
      run: |
        chmod +x $DIY_P1_SH
        cd openwrt
        $GITHUB_WORKSPACE/$DIY_P1_SH

    - name: ÊãâÂèñÊúÄÊñ∞ËΩØ‰ª∂ÂåÖ
      run: cd openwrt && ./scripts/feeds update -a

    - name: ÂÆâË£ÖËΩØ‰ª∂ÂåÖ
      run: cd openwrt && ./scripts/feeds install -a

    - name: ÊâßË°åËá™ÂÆö‰πâËÑöÊú¨2
      run: |
        chmod +x $DIY_P2_SH
        cd openwrt
        $GITHUB_WORKSPACE/$DIY_P2_SH
    
    - name: ËΩΩÂÖ•Ëá™ÂÆö‰πâÁºñËØëÊñá‰ª∂
      run: |
        [ -e $CONFIG_FILE ] && mv $CONFIG_FILE openwrt/.config

    - name: SSH ËøûÊé•ÈÄöÈÅìÂºÄÂêØ
      uses: meloncn/debugger-action@master
      if: env.SSH_ACTIONS == 'true' || contains(github.event.action, 'ssh')

    - name: ‰∏ãËΩΩÁºñËØëÊâÄÈúÄÊñá‰ª∂
      id: package
      run: |
        cd openwrt
        make defconfig
        make download -j8
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;

    - name: ÂºÄÂßãÁºñËØë
      id: compile
      if: env.DEBUG_MODEL == 'false' && !cancelled()
      run: |
        cd openwrt
        echo -e "$(nproc) thread compile"
        make -j$(nproc) || make -j1 || make -j1 V=s
        echo "::set-output name=status::success"
        grep '^CONFIG_TARGET.*DEVICE.*=y' .config | sed -r 's/.*DEVICE_(.*)=y/\1/' > DEVICE_NAME
        [ -s DEVICE_NAME ] && echo "::set-env name=DEVICE_NAME::_$(cat DEVICE_NAME)"
        echo "::set-env name=FILE_DATE::_$(date +"%Y%m%d%H%M")"

    - name: ÁºñËØëÁªìÊùüÂ≠òÂÇ®Á©∫Èó¥‰ΩøÁî®
      if: (!cancelled())
      run: |
          echo "======================="
          echo "Space usage:"
          echo "======================="
          df -h
          echo "======================="
          du -h ./ --max-depth=1
          du -h /mnt/openwrt/ --max-depth=1 || true

    - name: ‰∏ä‰º† BIN ÁõÆÂΩï
      uses: actions/upload-artifact@master
      if: env.DEBUG_MODEL == 'false' && steps.compile.outputs.status == 'success' && env.UPLOAD_BIN_DIR == 'true'
      with:
        name: OpenWrt_bin${{ env.DEVICE_NAME }}${{ env.FILE_DATE }}
        path: openwrt/bin

    - name: ‰∏ä‰º†BinÁõÆÂΩïÂà∞Â•∂ÁâõÂø´‰º†
      if: env.DEBUG_MODEL == 'false' &&  steps.compile.outputs.status == 'success' && env.UPLOAD_BIN_COWTRANSFER == 'true' && !cancelled()
      run: |
        curl -fsSL git.io/file-transfer | sh
        ./transfer cow --block 2621440 -s -p 64 --no-progress openwrt/bin 2>&1 | tee cowtransfer.log
        echo "::warning file=cowtransfer.com::$(cat cowtransfer.log | grep https)"

    - name: Êï¥ÁêÜÁºñËØëÂõ∫‰ª∂Êñá‰ª∂
      id: organize
      if: env.UPLOAD_FIRMWARE == 'true' && !cancelled()
      run: |
        cd openwrt/bin/targets/*/*
        rm -rf packages
        echo "::set-env name=FIRMWARE::$PWD"
        echo "::set-output name=status::success"

    - name: ‰∏ä‰º†Âõ∫‰ª∂ÁõÆÂΩï
      uses: actions/upload-artifact@master
      if: env.DEBUG_MODEL == 'false' && steps.organize.outputs.status == 'success' && !cancelled()
      with:
        name: OpenWrt_firmware${{ env.DEVICE_NAME }}${{ env.FILE_DATE }}
        path: ${{ env.FIRMWARE }}

    - name: ‰∏ä‰º†Âõ∫‰ª∂ÁõÆÂΩïÂà∞Â•∂ÁâõÂø´‰º†
      if: env.DEBUG_MODEL == 'false' && steps.organize.outputs.status == 'success' && env.UPLOAD_COWTRANSFER == 'true' && !cancelled()
      run: |
        curl -fsSL git.io/file-transfer | sh
        ./transfer cow --block 2621440 -s -p 64 --no-progress ${FIRMWARE} 2>&1 | tee cowtransfer.log
        echo "::warning file=cowtransfer.com::$(cat cowtransfer.log | grep https)"

    - name: ÂàõÂª∫tagÊ†áÁ≠æ
      id: tag
      if: env.DEBUG_MODEL == 'false' && env.UPLOAD_RELEASE == 'true' && !cancelled()
      run: |
        echo "::set-env name=RELEASE_TAG::$(date +"%Y.%m.%d-%H")"
        echo "üöÄ Auto build" >> release.txt
        echo "üîó [Cowtransfer](${{ env.COWTRANSFER_URL }})" >> release.txt
        echo "üîó [WeTransfer](${{ env.WETRANSFER_URL }})" >> release.txt
        echo "::set-output name=status::success"
    
    - name: ‰∏ä‰º†Âõ∫‰ª∂ÂèëÂ∏ÉRelease
      uses: softprops/action-gh-release@v1
      if: env.DEBUG_MODEL == 'false' && steps.tag.outputs.status == 'success' && !cancelled()
      env:
        GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}
      with:
        tag_name: ${{ env.RELEASE_TAG }}
        body_path: release.txt
        files: ${{ env.FIRMWARE }}/*
